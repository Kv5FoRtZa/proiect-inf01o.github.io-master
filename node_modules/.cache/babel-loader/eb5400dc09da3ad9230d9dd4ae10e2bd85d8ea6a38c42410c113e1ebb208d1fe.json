{"ast":null,"code":"import _ from'lodash';export var bellmanFord=function bellmanFord(l,matrice){var x,lin1,col1,i;var dx=[1,0,-1,0];var dy=[0,-1,0,1];var a=_.cloneDeep(matrice);var inQueue=[];for(i=0;i<matrice.length;i++){inQueue[i]=new Array(matrice.length);}var coada=[];coada.push({lin:1,col:1});inQueue[1][1]=1;l[1][1]=a[1][1];while(coada.length>0){x=coada[0];for(var _i=0;_i<4;_i++){lin1=x.lin+dx[_i];col1=x.col+dy[_i];if(a[lin1][col1]!==-1&&a[lin1][col1]+l[x.lin][x.col]<l[lin1][col1]){l[lin1][col1]=a[lin1][col1]+l[x.lin][x.col];if(!inQueue[lin1][col1]||inQueue[lin1][col1]===0){inQueue[lin1][col1]=1;coada.push({lin:lin1,col:col1});}}}coada.shift();inQueue[x.lin][x.col]=0;}return l;};","map":{"version":3,"names":["_","bellmanFord","l","matrice","x","lin1","col1","i","dx","dy","a","cloneDeep","inQueue","length","Array","coada","push","lin","col","shift"],"sources":["C:/Users/Antonia/Downloads/Antonia 2/src/functions/bellmanFord.js"],"sourcesContent":["import _ from 'lodash';\r\n\r\nexport const bellmanFord = (l, matrice) => {\r\n  let x, lin1, col1, i;\r\n  const dx = [1, 0, -1, 0];\r\n  const dy = [0, -1, 0, 1];\r\n  const a = _.cloneDeep(matrice);\r\n  const inQueue = [];\r\n\r\n  for (i = 0; i < matrice.length; i++) {\r\n    inQueue[i] = new Array(matrice.length);\r\n  }\r\n  const coada = [];\r\n\r\n  coada.push({ lin: 1, col: 1 });\r\n  inQueue[1][1] = 1;\r\n  l[1][1] = a[1][1];\r\n\r\n  while (coada.length > 0) {\r\n    x = coada[0];\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      lin1 = x.lin + dx[i];\r\n      col1 = x.col + dy[i];\r\n\r\n      if (a[lin1][col1] !== -1 && a[lin1][col1] + l[x.lin][x.col] < l[lin1][col1]) {\r\n        l[lin1][col1] = a[lin1][col1] + l[x.lin][x.col];\r\n\r\n        if (!inQueue[lin1][col1] || inQueue[lin1][col1] === 0) {\r\n          inQueue[lin1][col1] = 1;\r\n          coada.push({ lin: lin1, col: col1 });\r\n        }\r\n      }\r\n    }\r\n\r\n    coada.shift();\r\n    inQueue[x.lin][x.col] = 0;\r\n  }\r\n\r\n  return l;\r\n}"],"mappings":"AAAA,MAAO,CAAAA,CAAC,KAAM,QAAQ,CAEtB,MAAO,IAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIC,CAAC,CAAEC,OAAO,CAAK,CACzC,GAAI,CAAAC,CAAC,CAAEC,IAAI,CAAEC,IAAI,CAAEC,CAAC,CACpB,GAAM,CAAAC,EAAE,CAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CACxB,GAAM,CAAAC,EAAE,CAAG,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACxB,GAAM,CAAAC,CAAC,CAAGV,CAAC,CAACW,SAAS,CAACR,OAAO,CAAC,CAC9B,GAAM,CAAAS,OAAO,CAAG,EAAE,CAElB,IAAKL,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGJ,OAAO,CAACU,MAAM,CAAEN,CAAC,EAAE,CAAE,CACnCK,OAAO,CAACL,CAAC,CAAC,CAAG,GAAI,CAAAO,KAAK,CAACX,OAAO,CAACU,MAAM,CAAC,CACxC,CACA,GAAM,CAAAE,KAAK,CAAG,EAAE,CAEhBA,KAAK,CAACC,IAAI,CAAC,CAAEC,GAAG,CAAE,CAAC,CAAEC,GAAG,CAAE,CAAE,CAAC,CAAC,CAC9BN,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAG,CAAC,CACjBV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAEjB,MAAOK,KAAK,CAACF,MAAM,CAAG,CAAC,CAAE,CACvBT,CAAC,CAAGW,KAAK,CAAC,CAAC,CAAC,CAEZ,IAAK,GAAI,CAAAR,EAAC,CAAG,CAAC,CAAEA,EAAC,CAAG,CAAC,CAAEA,EAAC,EAAE,CAAE,CAC1BF,IAAI,CAAGD,CAAC,CAACa,GAAG,CAAGT,EAAE,CAACD,EAAC,CAAC,CACpBD,IAAI,CAAGF,CAAC,CAACc,GAAG,CAAGT,EAAE,CAACF,EAAC,CAAC,CAEpB,GAAIG,CAAC,CAACL,IAAI,CAAC,CAACC,IAAI,CAAC,GAAK,CAAC,CAAC,EAAII,CAAC,CAACL,IAAI,CAAC,CAACC,IAAI,CAAC,CAAGJ,CAAC,CAACE,CAAC,CAACa,GAAG,CAAC,CAACb,CAAC,CAACc,GAAG,CAAC,CAAGhB,CAAC,CAACG,IAAI,CAAC,CAACC,IAAI,CAAC,CAAE,CAC3EJ,CAAC,CAACG,IAAI,CAAC,CAACC,IAAI,CAAC,CAAGI,CAAC,CAACL,IAAI,CAAC,CAACC,IAAI,CAAC,CAAGJ,CAAC,CAACE,CAAC,CAACa,GAAG,CAAC,CAACb,CAAC,CAACc,GAAG,CAAC,CAE/C,GAAI,CAACN,OAAO,CAACP,IAAI,CAAC,CAACC,IAAI,CAAC,EAAIM,OAAO,CAACP,IAAI,CAAC,CAACC,IAAI,CAAC,GAAK,CAAC,CAAE,CACrDM,OAAO,CAACP,IAAI,CAAC,CAACC,IAAI,CAAC,CAAG,CAAC,CACvBS,KAAK,CAACC,IAAI,CAAC,CAAEC,GAAG,CAAEZ,IAAI,CAAEa,GAAG,CAAEZ,IAAK,CAAC,CAAC,CACtC,CACF,CACF,CAEAS,KAAK,CAACI,KAAK,EAAE,CACbP,OAAO,CAACR,CAAC,CAACa,GAAG,CAAC,CAACb,CAAC,CAACc,GAAG,CAAC,CAAG,CAAC,CAC3B,CAEA,MAAO,CAAAhB,CAAC,CACV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}