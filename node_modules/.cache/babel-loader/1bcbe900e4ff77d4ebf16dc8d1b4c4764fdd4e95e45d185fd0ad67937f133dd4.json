{"ast":null,"code":"import{toast}from'react-toastify';import{bellmanFord}from'./bellmanFord';import{generareDrum}from'./generareDrum';export var main=function main(n,matrice,setLoading,setDrum){var i,j;var l=[];for(i=0;i<=parseInt(n)+1;i++){l[i]=[];}for(i=1;i<=n;i++){for(j=1;j<=n;j++){l[i][j]=99999999;}}var newL=bellmanFord(l,matrice);if(newL[1][1]===-1){toast.error('Pozitia initiala este blocata!',{autoClose:1000});setLoading(true);setDrum([0,0]);return;}else if(newL[n][n]===99999999){toast.error('Nu este nici un drum disponibil!',{autoClose:1000});setLoading(true);setDrum([0,0]);return;}else{var drumObject=generareDrum(newL,matrice);setDrum(drumObject.drum);toast.success('Drumul minim are costul',{autoClose:1000});toast.success(newL[n][n],{autoClose:1000});}};","map":{"version":3,"names":["toast","bellmanFord","generareDrum","main","n","matrice","setLoading","setDrum","i","j","l","parseInt","newL","error","autoClose","drumObject","drum","success"],"sources":["C:/Users/Antonia/Downloads/Antonia 2/src/functions/doStuff.js"],"sourcesContent":["import { toast } from 'react-toastify';\r\nimport { bellmanFord } from './bellmanFord';\r\nimport { generareDrum } from './generareDrum';\r\n\r\nexport const main = (n, matrice, setLoading, setDrum) => {\r\n  let i, j;\r\n  const l = [];\r\n\r\n  for (i = 0; i <= parseInt(n) + 1; i++) {\r\n    l[i] = [];\r\n  }\r\n\r\n  for (i = 1; i <= n; i++) {\r\n    for (j = 1; j <= n; j++) {\r\n      l[i][j] = 99999999\r\n    }\r\n  }\r\n\r\n  const newL = bellmanFord(l, matrice);\r\n\r\n  if (newL[1][1] === -1) {\r\n    toast.error('Pozitia initiala este blocata!', { autoClose: 1000 })\r\n    setLoading(true)\r\n    setDrum([0, 0])\r\n\r\n    return\r\n  } else if (newL[n][n] === 99999999) {\r\n    toast.error('Nu este nici un drum disponibil!', { autoClose: 1000 })\r\n    setLoading(true)\r\n    setDrum([0, 0])\r\n\r\n    return\r\n  }\r\n  else{\r\n    const drumObject = generareDrum(newL, matrice);\r\n    setDrum(drumObject.drum)\r\n    toast.success('Drumul minim are costul', { autoClose: 1000 })\r\n    toast.success(newL[n][n], { autoClose: 1000 })\r\n  }\r\n}"],"mappings":"AAAA,OAASA,KAAK,KAAQ,gBAAgB,CACtC,OAASC,WAAW,KAAQ,eAAe,CAC3C,OAASC,YAAY,KAAQ,gBAAgB,CAE7C,MAAO,IAAM,CAAAC,IAAI,CAAG,QAAP,CAAAA,IAAIA,CAAIC,CAAC,CAAEC,OAAO,CAAEC,UAAU,CAAEC,OAAO,CAAK,CACvD,GAAI,CAAAC,CAAC,CAAEC,CAAC,CACR,GAAM,CAAAC,CAAC,CAAG,EAAE,CAEZ,IAAKF,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAIG,QAAQ,CAACP,CAAC,CAAC,CAAG,CAAC,CAAEI,CAAC,EAAE,CAAE,CACrCE,CAAC,CAACF,CAAC,CAAC,CAAG,EAAE,CACX,CAEA,IAAKA,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAIJ,CAAC,CAAEI,CAAC,EAAE,CAAE,CACvB,IAAKC,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAIL,CAAC,CAAEK,CAAC,EAAE,CAAE,CACvBC,CAAC,CAACF,CAAC,CAAC,CAACC,CAAC,CAAC,CAAG,QAAQ,CACpB,CACF,CAEA,GAAM,CAAAG,IAAI,CAAGX,WAAW,CAACS,CAAC,CAAEL,OAAO,CAAC,CAEpC,GAAIO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAK,CAAC,CAAC,CAAE,CACrBZ,KAAK,CAACa,KAAK,CAAC,gCAAgC,CAAE,CAAEC,SAAS,CAAE,IAAK,CAAC,CAAC,CAClER,UAAU,CAAC,IAAI,CAAC,CAChBC,OAAO,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAEf,OACF,CAAC,IAAM,IAAIK,IAAI,CAACR,CAAC,CAAC,CAACA,CAAC,CAAC,GAAK,QAAQ,CAAE,CAClCJ,KAAK,CAACa,KAAK,CAAC,kCAAkC,CAAE,CAAEC,SAAS,CAAE,IAAK,CAAC,CAAC,CACpER,UAAU,CAAC,IAAI,CAAC,CAChBC,OAAO,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAEf,OACF,CAAC,IACG,CACF,GAAM,CAAAQ,UAAU,CAAGb,YAAY,CAACU,IAAI,CAAEP,OAAO,CAAC,CAC9CE,OAAO,CAACQ,UAAU,CAACC,IAAI,CAAC,CACxBhB,KAAK,CAACiB,OAAO,CAAC,yBAAyB,CAAE,CAAEH,SAAS,CAAE,IAAK,CAAC,CAAC,CAC7Dd,KAAK,CAACiB,OAAO,CAACL,IAAI,CAACR,CAAC,CAAC,CAACA,CAAC,CAAC,CAAE,CAAEU,SAAS,CAAE,IAAK,CAAC,CAAC,CAChD,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}